package controller;


import model.Repository;
import model.membermodel.Member;
import model.membermodel.MemberService;
import model.membermodel.MemberServiceImpl;
import model.membermodel.Usertype;
import view.memberview.JoinFrame;
import view.memberview.LoginFrame;
import view.menteeview.MenteeView;
import view.mentorview.MentorView;

import javax.swing.*;

public class MemberController {
    private Repository repository;
    private MemberService memberService;

    public MemberController(Repository repository) {
        this.repository = repository;
        memberService = new MemberServiceImpl(repository);
    }

    public void registerMember(String id, String password, String name, Usertype usertype, int age, String sportcarrer, String sex){
        // 입력 받은 정보로 회원 가입 처리하기
        if (memberService.findId(id)) {
            JOptionPane.showMessageDialog(null, "이미 존재하는 아이디입니다. 다른 아이디를 입력해주세요.");
            goJoinFrame();
        } else {
            Member member = new Member(id, password, name, usertype, age, sportcarrer, sex);
            memberService.join(member);
            JOptionPane.showMessageDialog(null, "가입에 성공했습니다.");
            goLoginFrame();
        }
    }

    public void loginMember(String id, String password){
        try {
            Member member = memberService.findMember(id);
            if (member.getId().equals(id) && member.getPassword().equals(password)) {
                if (member.getUserType().equals(Usertype.Mentee)) {
                    MenteeController menteeController = new MenteeController(repository, this, member);
                    MenteeView menteeView = new MenteeView(menteeController);
                } else if (member.getUserType().equals(Usertype.Mentor)) {
                    MentorController mentorController = new MentorController(repository, this, member);
                    MentorView mentorView = new MentorView(mentorController);
                }
            } else {
                throw new IllegalStateException(""); // 예외 발생
            }
        }catch(NullPointerException ex){
            JOptionPane.showMessageDialog(null, "로그인에 실패했습니다.");
            goLoginFrame();
        }
    }

    public void goJoinFrame(){
        JoinFrame joinFrame = new JoinFrame(this);
    }

    public void goLoginFrame(){
        LoginFrame loginFrame = new LoginFrame(this);
    }
}











































































 
 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    










































































































































































































































































































































































































































































































































































































































